BASE URL : http://m.brsoftech.net/pos/v1

Username : cashier@pos.com
Password : 123456

1.  Cashier Login
    url - /login
    method - POST
    params - username(mandatory), password(mandatory), devicetoken(mandatory), deviceid(mandatory)

2.  Cashier Logout
    url - /logout
    method - GET
    header Params - username(mandatory), password(mandatory) 

3.  Cashier Details (Authenticated)
    url - /cashierdetails/:cashierid
    method - GET
    header Params - username(mandatory), password(mandatory)

4.  Restaurant Tables (Authenticated)
    url - /cashiertables
    method - GET
    header Params - username(mandatory), password(mandatory)
    
5.  All pending orders
    url - /pendingorders/:type/:tableno
    type :- T / W , T-> Takeout, W -> Waiting
    tableno :- default 0 when type= W / T
    method - GET
    header Params - username(mandatory), password(mandatory)
    
6. Get all items with category
   url - /items/:categoryid
   categoryid :- default 0  , If O then all items and categories will return
   method - GET
   header Params - username(mandatory), password(mandatory)
   
7. Get extras list with type
   url - /extras/:type
   method - GET
   type :- P / T
   header Params - username(mandatory), password(mandatory)

8. Make a reservation
   url - /reservation 
   method - POST
   params - name(mandatory), noofperson(mandatory), phoneno(mandatory), date(mandatory), time(mandatory), required(mandatory)
   header Params - email (mandatory), password (mandatory)
   
9. Cancel reservation
   url - /cancelreservation 
   method - POST
   params - reservationid(mandatory), reason(optional)
   header Params - email (mandatory), password (mandatory)
   
10. Get all reservation
    url - /reservations/:type
    type :- P -> Pending, A -> Assigned, C-> Cancelled, If all needed then use 'O'
    method - GET
    header Params - username(mandatory), password(mandatory)
    
11. Update reservation
    url - /updatereservation 
    method - POST
    params - reservationid(mandatory), name(mandatory), noofperson(mandatory), phoneno(mandatory), date(mandatory), time(mandatory), required(mandatory)
    header Params - email (mandatory), password (mandatory)
 
12. Assign a table against reservation
    url - /reservetable 
    method - POST
    params - reservationid(mandatory), tableno(mandatory)
    header Params - email (mandatory), password (mandatory)
    
13. Make Order For Dinein
    url - /makeorderdinein 
    method - POST
    params - type(mandatory), itemdata(mandatory), tableno(optional)
    type :- D-> Dinin
    itemdata = [{ "itemid": "68",  "qty": "20", "allextras": 
	[{ "id": "56", "name": "extra egg", "name_zh": "extra egg", "price": "2" }, {
			"id": "57", "name": "extra cha-shu", "name_zh": "extra cha-shu", "price": "3.5" }],
		"selectedextras": [{"id": "56", "price": "2", "name": "extra egg", "name_zh": "extra egg" }, {
			"id": "57", "price": "3.5", "name": "extra cha-shu", "name_zh": "extra cha-shu"}]
	}]
    header Params - email (mandatory), password (mandatory)
    
14. Make Order
    url - /makeorderother
    method - POST
    params - type(mandatory), name(mandatory), noofperson(mandatory), phoneno(mandatory)
    type :- T / W : Takeout / Waiting
    when type = T
    takeout_date(mandatory), takeout_time(mandatory)
    
15. Add item in order
    url - /addorderitem 
    method - POST
    params - itemdata(mandatory), orderid(mandatory)
    itemdata = [{ "itemid": "68",  "qty": "20", "allextras": 
	[{ "id": "56", "name": "extra egg", "name_zh": "extra egg", "price": "2" }, {
			"id": "57", "name": "extra cha-shu", "name_zh": "extra cha-shu", "price": "3.5" }],
		"selectedextras": [{"id": "56", "price": "2", "name": "extra egg", "name_zh": "extra egg" }, {
			"id": "57", "price": "3.5", "name": "extra cha-shu", "name_zh": "extra cha-shu"}]
	}]
    header Params - email (mandatory), password (mandatory)
    
16. Remove item from order
    url - /removeorderitem 
    method - POST
    params - itemdata(mandatory), orderid(mandatory)
    itemdata = [{ "itemid": "68", "rowid":"153"}]
    header Params - email (mandatory), password (mandatory)
