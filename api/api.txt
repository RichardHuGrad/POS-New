BASE URL : http://m.brsoftech.net/pos/v1

Username : cashier@pos.com
Password : 123456

1.  Cashier Login
    url - /login
    method - POST
    params - username(mandatory), password(mandatory), devicetoken(mandatory), deviceid(mandatory)

2.  Cashier Logout
    url - /logout
    method - GET
    header Params - username(mandatory), password(mandatory) 

3.  Cashier Details (Authenticated)
    url - /cashierdetails/:cashierid
    method - GET
    header Params - username(mandatory), password(mandatory)

4.  Restaurant Tables (Authenticated)
    url - /cashiertables
    method - GET
    header Params - username(mandatory), password(mandatory)
    
5.  All pending orders
    url - /pendingorders/:type/:tableno
    type :- T / W / D , T-> Takeout, W -> Waiting, D -> dineIn
    tableno :- default 0 when type= W / T
    method - GET
    header Params - username(mandatory), password(mandatory)
    
6.  Get all items with category
    url - /items/:categoryid
    categoryid :- default 0  , If O then all items and categories will return
    method - GET
    header Params - username(mandatory), password(mandatory)
   
7.  Get extras list with type
    url - /extras/:type
    method - GET
    type :- P / T
    header Params - username(mandatory), password(mandatory)

8.  Make a reservation
    url - /reservation 
    method - POST
    params - name(mandatory), noofperson(mandatory), phoneno(mandatory), date(mandatory), time(mandatory), required(mandatory)
    header Params - email(mandatory), password(mandatory)
   
9.  Cancel reservation
    url - /cancelreservation 
    method - POST
    params - reservationid(mandatory), reason(optional)
    header Params - email(mandatory), password(mandatory)
   
10. Get all reservation
    url - /reservations/:type
    type :- P -> Pending, A -> Assigned, C-> Cancelled, If all needed then use 'O'
    method - GET
    header Params - username(mandatory), password(mandatory)
    
11. Update reservation
    url - /updatereservation 
    method - POST
    params - reservationid(mandatory), name(mandatory), noofperson(mandatory), phoneno(mandatory), date(mandatory), time(mandatory), required(mandatory)
    header Params - email(mandatory), password(mandatory)
 
12. Assign a table against reservation
    url - /reservetable 
    method - POST
    params - reservationid(mandatory), tableno(mandatory)
    header Params - email(mandatory), password(mandatory)
    
13. Make Order For Dinein
    url - /makeorderdinein 
    method - POST
    params - type(mandatory), itemdata(mandatory), tableno(mandatory)
    type :- D-> Dinin
    itemdata = [{ "itemid": "68",  "qty": "20", "allextras": 
	[{"id": "56", "name": "extra egg", "name_zh": "extra egg", "price": "2"}, 
	 {"id": "57", "name": "extra cha-shu", "name_zh": "extra cha-shu", "price": "3.5"}],
   	"selectedextras": 
	[{"id": "56", "price": "2", "name": "extra egg", "name_zh": "extra egg"},
	 {"id": "57", "price": "3.5", "name": "extra cha-shu", "name_zh": "extra cha-shu"}]
	}]
    header Params - email(mandatory), password(mandatory)

    
14. Make Order
    url - /makeorderother
    method - POST
    params - type(mandatory), name(mandatory), noofperson(mandatory), phoneno(mandatory)
    type :- T / W : Takeout / Waiting
    when type = T
    takeout_date(mandatory), takeout_time(mandatory)
    
15. Add item in order
    url - /addorderitem 
    method - POST
    params - itemdata(mandatory), orderid(mandatory)
    itemdata = [{ "itemid": "68",  "qty": "20", "allextras": 
	[{"id": "56", "name": "extra egg", "name_zh": "extra egg", "price": "2"},
	 {"id": "57", "name": "extra cha-shu", "name_zh": "extra cha-shu", "price": "3.5"}],
        "selectedextras": 
	[{"id": "56", "price": "2", "name": "extra egg", "name_zh": "extra egg"},
         {"id": "57", "price": "3.5", "name": "extra cha-shu", "name_zh": "extra cha-shu"}]
	}]
    header Params - email(mandatory), password(mandatory)
    
16. Remove item from order
    url - /removeorderitem 
    method - POST
    params - itemdata(mandatory), orderid(mandatory)
    itemdata = [{ "itemid": "68", "rowid":"153"}]
    header Params - email (mandatory), password (mandatory)

17. Change Table
    url - /changetable
    method - POST
    params - tableno(mandatory), newtableno(mandatory), orderid(mandatory)
    header Params - email(mandatory), password(mandatory)

18. Get order selected extras with item
    url - /orderitemextras/:orderid/:rowid
    method - GET
    header Params - username(mandatory), password(mandatory)

19. Order History (20 records per page)
    url - /orderhistory/:type/:tableno/:pageno
    type :- T / W , T-> Takeout, W -> Waiting
    pageno :- If 0 then all records else page data
    method - GET
    header Params - username(mandatory), password(mandatory)

20. Make Table available
    url - /makeavailable
    params -  orderid(mandatory), tableno(mandatory), username(mandatory), password(mandatory)
    method - POST
    NOTE :- username + password must be used for manager / admin in params
    manager account details : username -> restaurant@pos_v1.com , password -> 123456
    header Params - username(mandatory), password(mandatory)
    
21. Change item delivery type
    url - /changeitemdeliverytype
    params -  orderid(mandatory), orderitemid(mandatory), tableno(mandatory), oldtype(mandatory), newtype(mandatory)
    method - POST
    header Params - username(mandatory), password(mandatory)
    
22. Change order item price
    url - /changeorderitemprice
    params -  orderid(mandatory), orderitemid(mandatory), tableno(mandatory), oldprice(mandatory), newprice(mandatory)
    method - POST
    header Params - username(mandatory), password(mandatory)
    
23. Update quantity + add / edit extras
    url - /updateorderitem 
    method - POST
    params - orderid(mandatory), itemid(mandatory), rowid(mandatory), allextras(mandatory), selectedextras(optional), quantity(mandatory), specialinstruction(optional)
    allextras= [{"id": "56", "name": "extra egg", "name_zh": "extra egg", "price": "2", "type":"T"},
	 {"id": "57", "name": "extra cha-shu", "name_zh": "extra cha-shu", "price": "3.5", "type":"P"}]
    selectedextras= [{"id": "56", "price": "2", "name": "extra egg", "name_zh": "extra egg", "type":"T"},
         {"id": "57", "price": "3.5", "name": "extra cha-shu", "name_zh": "extra cha-shu", "type":"P"}]
    specialinstruction : NO / LESS / MORE 
    header Params - email(mandatory), password(mandatory)
    
24. Merging Table Data
    url - /mergingtabledata/:orderid/:mergedorderids
    mergedorderids :- comma separated, if more than 1 merging table
    method - GET
    header Params - username(mandatory), password(mandatory)

25. Make Payment
    url - /makepayment 
    method - POST
    params - orderid(mandatory), mergedorderids(mandatory), tip(mandatory), paymenttype(mandatory)
    mergedorderids :- comma separated, if more than 1 merging table
    tip : default 0
    paymenttype :- CARD / CASH
    header Params - email(mandatory), password(mandatory)
